{"version":3,"sources":["../node_modules/reselect/es/index.js","selectors/index.js","hooks/index.js","components/list-songs/index.js","pages/songs/index.js"],"names":["defaultEqualityCheck","a","b","areArgumentsShallowlyEqual","equalityCheck","prev","next","length","i","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelector","memoize","_len","arguments","memoizeOptions","_key","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","apply","undefined","concat","selector","params","push","resetRecomputations","createSelectorCreator","func","lastArgs","lastResult","useData","route","dispatch","useDispatch","reducerData","useSelector","state","endpoints","selectRouteData","useEffect","isEmpty","fetchAction","ListSongs","data","onSelectItem","isAlbum","id","ListGroup","key","name","previewUrl","preview_url","spotifyUrl","spotify_url","ListGroupItem","className","Row","Col","sm","controls","src","type","Button","onClick","color","size","Songs","pathname","useLocation","loading","song","dispatchActionSelectSong"],"mappings":"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","file":"static/js/6.52a8ea70.chunk.js","sourcesContent":["function defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n  var length = prev.length;\n\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n  var lastArgs = null;\n  var lastResult = null; // we reference arguments instead of spreading them for performance reasons\n\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      return memoizedResultFunc.apply(null, params);\n    });\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n\n    selector.recomputations = function () {\n      return recomputations;\n    };\n\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n\n    return selector;\n  };\n}\nexport var createSelector = createSelectorCreator(defaultMemoize);\nexport function createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","import { createSelector } from 'reselect'\n\nexport const selectRouteData = route => createSelector(\n  state => state.endpoints,\n  endpoints => endpoints[route] || {}\n)\n","import { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { fetchAction } from 'actions'\nimport { selectRouteData } from 'selectors'\nimport isEmpty from 'lodash/isEmpty'\n\nexport const useData = (route) => {\n  const dispatch = useDispatch()\n  const reducerData = useSelector(selectRouteData(route))\n\n  useEffect(() => {\n    if (isEmpty(reducerData)) {\n      fetchAction(dispatch)(route)\n    }\n  }, [reducerData, dispatch, route])\n\n  return reducerData\n}\n","import React from 'react'\nimport { ListGroup, ListGroupItem, Button, Row, Col } from 'reactstrap'\n\nconst ListSongs = ({ data, isAlbum, id, onSelectItem }) => (\n  <ListGroup>\n    {data.map(({ name, preview_url: previewUrl, spotify_url: spotifyUrl }, key) => (\n      <ListGroupItem key={`item-${key}`} className='list-item align-middle'>\n        <Row>\n          <Col sm='4'>\n            {previewUrl ? (\n              <audio controls>\n                <source src={previewUrl} type='audio/mpeg' />\n              </audio>\n            ) : 'No hay preview de Canci√≥n'}\n\n          </Col>\n          <Col sm='8'>\n            <Button onClick={() => onSelectItem(spotifyUrl)} color='link' size='lg'>{name}</Button>\n          </Col>\n        </Row>\n\n      </ListGroupItem>\n    ))}\n  </ListGroup>\n)\n\nexport default ListSongs\n","import React from 'react'\r\nimport { Row, Col } from 'reactstrap'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport Loading from 'components/loading'\r\nimport ListSongs from 'components/list-songs'\r\n\r\nimport { useData } from 'hooks'\r\nimport { dispatchActionSelectSong } from 'actions'\r\n\r\nconst Songs = () => {\r\n  const dispatch = useDispatch()\r\n  const { pathname } = useLocation()\r\n  const data = useData(pathname)\r\n\r\n  const onSelectSong = song => dispatchActionSelectSong(dispatch)(song)\r\n\r\n  if (!data.data || data.loading) {\r\n    return <Loading />\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <ListSongs data={data.data} onSelectItem={onSelectSong} />\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default Songs\r\n"],"sourceRoot":""}